version: '3.8'

services:
  portainer:
    image: portainer/portainer
    ports:
      - "9002:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network

  mysql-container:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3308:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  nodeapp:
    build:
      context: ./nodeapp
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_PORT: ${DATABASE_PORT}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    depends_on:
      - mysql-container
      - minio
    networks:
      - app-network
    command: ["sh", "-c", "/usr/local/bin/wait-for-it.sh mysql-container:3306 -- ./swagger_update.sh && npm start"]
    volumes:
      - ./nodeapp/swagger.json:/usr/src/app/swagger.json
      - ./nodeapp/swagger_update.sh:/usr/src/app/swagger_update.sh

  minio:
    image: minio/minio
    command: minio server --console-address ":9090" /data
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    ports:
      - "9001:9001"
      - "9090:9090"
    volumes:
      - minio_data:/data
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: always
    ports:
      - "8080:80"
    environment:
      PMA_HOST: ${PMA_HOST}
      PMA_PASSWORD: ${PMA_PASSWORD}
    depends_on:
      - mysql-container
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  minio_data: